"use strict";const chat=new Chat(("https:"===location.protocol?"wss://":"ws://")+location.host+"/webSocket"),verbindenBtn=document.getElementById("verbinden"),sendenBtn=document.getElementById("senden"),userNameInpt=document.getElementById("username"),messageInpt=document.getElementById("message"),encryptInpt=document.getElementById("encrypt"),loginForm=document.getElementById("loginForm"),sendeForm=document.getElementById("sendeForm"),bytesToWriteElem=document.getElementById("bytesToWrite");function Chat(wsurl){const _this=this;let userName,keys={},serverKeys={},userList=[];const messageBox=document.getElementById("messageBox"),verbindungsBereich=document.getElementById("verbindungsBereich"),usersBereich=document.getElementById("users");function userUpdate(count,list){usersBereich.innerHTML=`Aktive Nutzer: ${list.map(item=>item.name).join(", ")} (${count})`}function addToMessageBox(msg){document.body.style.cursor="wait";const receiveDate=new Date,msgDate=new Date(msg.zeit),scope=msg.user.username==userName?"self":"server"==msg.user.username||"system"==msg.user.username?"system":"other",messageElem=document.createElement("div");if(messageElem.className=`msg ${scope}`,messageElem.setAttribute("msgorder",msgDate.toISOString()+(void 0!==msg.id?msg.id:"0")),messageElem.setAttribute("msgid",void 0!==msg.id?msg.id:"0"),"system"!==scope){let datum=msgDate.toLocaleDateString("de-de",{day:"2-digit",month:"2-digit",year:"numeric",hour:"numeric",minute:"numeric",second:"numeric"}),zeit=msgDate.toLocaleTimeString("de-de",{hour:"numeric",minute:"numeric"}),message=msg.text,encrypted=!1;"other"===scope&&"object"==typeof message&&(message=decrypt(message,keys.private,keys.shared),encrypted=!0),messageElem.style.borderLeft=`5px solid #${userList.find(item=>item.name==msg.user.username).color}`,messageElem.innerHTML=`<div class="header">\n                <div class="user">${msg.user.username}</div>`+(encrypted?'<div class="encrypted" title="Diese Nachricht wurde verschlüsselt übertragen">v</div>':"")+`<div class="zeit" title="${datum}">${zeit}</div></div>\n            <div class="text">${message.replace(/\n/g,"<br>")}</div>`}else messageElem.innerHTML=`<div class="text">${msg.text.replace(/\n/g,"<br>")}</div>`;"granted"===Notification.permission&&receiveDate.getTime()-msgDate.getTime()<1e4&&msg.user.username!==userName&&"system"!==msg.user.username&&("system"!==scope?new Notification("Neue Nachricht von "+msg.user.username+":",{body:msg.text.substring(0,32)+(msg.text.length>32?"...":"")}):new Notification(msg.text)),void 0!==msg.mode?messageBox.prepend(messageElem):messageBox.append(messageElem),msg.mode&&2==msg.mode||(messageBox.scrollTop=messageBox.scrollHeight),document.body.style.cursor="default"}this.connection,this.verbinden=function(){userName=userNameInpt.value,userName&&userName.length>=userNameInpt.getAttribute("minlength")&&userName.length<=userNameInpt.getAttribute("maxlength")?(messageBox.innerHTML="",verbindungsBereich.parentNode.removeChild(verbindungsBereich),_this.connection=new WebSocket(wsurl),_this.connection.onopen=function(){document.body.style.cursor="wait",addToMessageBox({text:"Verbindung hergestellt",zeit:(new Date).getTime(),user:{username:"system"}}),keys=genKeys(),_this.connection.send(JSON.stringify({purpose:"login",user:userName,keys:{public:keys.public,shared:keys.shared}})),document.body.style.cursor="default"},_this.connection.onmessage=function(msg){console.log(msg.data);let json=JSON.parse(msg.data);if(json.purpose)switch(json.purpose){case"msg":addToMessageBox(json);break;case"userupdate":userList=json.list,userUpdate(json.count,json.list);break;case"loginfailed":addToMessageBox(json),setTimeout((function(){window.location.reload()}),2e3);break;case"loginok":messageInpt.removeAttribute("disabled"),sendenBtn.removeAttribute("disabled"),Notification.requestPermission(),serverKeys=json.keys,delete json.keys,addToMessageBox(json),messageInpt.addEventListener("input",(function(){let bytesToWrite=parseInt(messageInpt.getAttribute("maxlength"));bytesToWrite-=messageInpt.value.length,bytesToWriteElem.innerHTML=bytesToWrite}))}},_this.connection.onerror=function(error){console.error(error),addToMessageBox({text:"Ein Fehler ist aufgetreten",zeit:(new Date).getTime(),user:{username:"system"}})},_this.connection.onclose=function(ev){console.log(ev),addToMessageBox({text:"Verbindung wurde unterbrochen",zeit:(new Date).getTime(),user:{username:"system"}})}):addToMessageBox({text:"Bitte gültigen Nutzernamen eingeben",zeit:(new Date).getTime(),user:{username:"system"}})},this.senden=function(){const message=messageInpt.value,encryptMsg=encryptInpt.checked;console.log(encryptMsg),_this.connection&&message.length>=messageInpt.getAttribute("minlength")&&message.length<=messageInpt.getAttribute("maxlength")?(_this.connection.send(JSON.stringify({purpose:"sendmsg",msg:encryptMsg?encrypt(message.trim(),serverKeys.public,serverKeys.shared):message.trim()})),addToMessageBox({purpose:"msg",text:message.trim(),zeit:(new Date).toISOString(),user:{username:userName}}),messageInpt.value="",bytesToWriteElem.innerHTML=messageInpt.getAttribute("maxlength")):_this.connection||alert('Bitte zuerst "Verbinden"!')}}verbindenBtn.addEventListener("click",chat.verbinden),loginForm.addEventListener("submit",(function(event){event.preventDefault()})),sendenBtn.addEventListener("click",chat.senden),messageInpt.addEventListener("keyup",(function(event){13!==event.keyCode||event.shiftKey||(event.preventDefault(),sendenBtn.click())})),sendeForm.addEventListener("submit",(function(event){event.preventDefault()}));
//# sourceMappingURL=websocket.min.js.map